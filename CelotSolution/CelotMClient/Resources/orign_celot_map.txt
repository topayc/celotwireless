<!DOCTYPE html> 
<html> 
<head> 
<meta name="viewport" content="initial-scale=1.0, user-scalable=no" /> 
<title>Google Map</title>
<style type="text/css"> 
  html, body, #map-canvas {
        height: 100%;
        margin: 0px;
        padding: 0px;
		height: 100%;
      }

 html {height: 100%; margin: 0px; padding: 0px;} 
 body { height: 100%; margin: 0px; padding: 0px; font-size: 9pt; } 	
 #map_canvas { width: 100%; height: 100% }	
	.controls {
        margin-top: 16px;
        border: 1px solid transparent;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        height: 32px;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
      }

      #pac-input {
        background-color: #fff;
        padding: 0 11px 0 13px;	
        width: 200px;
		height:20px;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        text-overflow: ellipsis;
      }
    input { font-size: 9pt; }
</style> 
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false&region=KR"></script> 
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.2/jquery.min.js"></script>
<script type="text/javascript"  src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.10.1/jquery-ui.min.js"></script> 

<script type="text/javascript"> 
 var isExtend = false;
 
function layerEnableOnMap(enable){
	if (enable){
		$( "#router_info_panel" ).draggable();
		$("#folder-extender").click(function(){
			if (isExtend ){
				$("#folder-extender").html("▼");
				$("#router_content").slideUp('fast');
				isExtend  = false;
			}else {
				$("#folder-extender").html("▲")
				$("#router_content").slideDown('fast');
				isExtend  = true;
			}
		});
		$("#router_content").hide();
	}else {
		$("#router_info_panel").hide();
	}
}

var StreetViewPanorama = new function(){};
var map;
var markers = [];
var geocoder;

// 맵 초기화
function initialize(x, y) { 
    if(x == 0){ x=37.50075507977441;}
    if(y == 0){ y=127.03690767288208;}

    geocoder = new google.maps.Geocoder();
    var latlng = new google.maps.LatLng(x, y);
    var myOptions = { 
        zoom: 15, 
        //disableDoubleClickZoom:false,
        center: latlng, 
        navigationControl: false,    // 눈금자 형태로 스케일 조절하는 컨트롤 활성화 선택.
        navigationControlOptions: { 
            position: google.maps.ControlPosition.TOP_RIGHT,
            style: google.maps.NavigationControlStyle.DEFAULT // ANDROID, DEFAULT, SMALL, ZOOM_PAN
        },
        streetViewControl: false,
        scaleControl: false,    // 지도 축적 보여줄 것인지.
        //scaleControlOptions: { position: google.maps.ControlPosition.TOP_RIGHT },
        mapTypeControl: false, // 지도,위성,하이브리드 등등 선택 컨트롤 보여줄 것인지
        mapTypeId: google.maps.MapTypeId.ROADMAP  // HYBRID, ROADMAP, SATELLITE, TERRAIN
    }; 
    map = new google.maps.Map(document.getElementById("map_canvas"), myOptions); 
	
	//현재 자신의 위치를 표시하기 위하여 지오로케이션 체크 
	if("geolocation" in navigator){
		navigator.geolocation.getCurrentPosition(mylocation);
	}else {
		
	}
	//맵 초기화를 윈폼으로 알림
	window.external.MapInitalizeFinished();
}

function mylocation(position){
	alert("지오로케이션 진행");
	var latlng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
	var myOptions = {
        position: latlng,
        draggable: false,
        map: map,
		label : "S",
		//icon: image,
		title : "Server",
        visible: true
    };
	var marker = new google.maps.Marker(myOptions);
}

//일반적인 목적의 마커 표시 함수 
function addCommonMarker (header, content, lat, lng, ip, address){
	 var contentString = 
		 '<div id="content">'+ 
			  '<div id="siteNotice">'+ 'Router Control Center' + 
				  '</div>'+
				  '<h2 id="firstHeading" class="firstHeading">' + header+ '</h2>'+
				  '<div id="bodyContent">'+
				  '<p><b>'+ content+ '</b></p>'+
				  '<p><b>Latitude </b> :&nbsp;' + lat + '</p>'+
				  '<p><b>Longitude</b> :&nbsp;' + lng+ '</p>'+
				  '<p><b>IP</b> :&nbsp;' + ip + '</p>'+
				  '<p><b>Address </b> :&nbsp; ' + address+ '</p>';
	 contentString +='</div>'+'</div>';
	 var infowindow = new google.maps.InfoWindow({
		content: contentString
    });

	var myOptions = {
        position: {lat: lat, lng: lng},
        draggable: false,
        map: map,
		//label : "R",
		//icon: image,
		title : header,
        visible: true
    };
	var pinColor = "00bfFf|336633";	
	myOptions.icon = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|" + pinColor,
		new google.maps.Size(25, 39),
		new google.maps.Point(0,0),
		new google.maps.Point(10, 34),
		new google.maps.Size(25, 39));
	var marker = new google.maps.Marker(myOptions);
	google.maps.event.addListener(marker, 'mouseover', function(){
		infowindow.open(map, marker);
	});

	google.maps.event.addListener(marker, 'mouseout', function(){
		 infowindow.close();
	});
}
  
//마커 추가 
function addMarker(
					latitude,
					longitude,
                    routerName, 
                    des,
                    serialNo,
					number,
                    rssi,
					routerIp,
					lanIp,
					wanIp,
					firmVersion,
                    nmsVersion,
                    message,
                    router_status
					){

	 var ipstr = lanIp == "" ? "" : lanIp + '('+wanIp+ ')'; 
	 var contentString = 
		 '<div id="content">'+ 
			  '<div id="siteNotice">'+ 'Router Info' + 
				  '</div>'+
				  '<h2 id="firstHeading" class="firstHeading">' + routerName + '</h2>'+
				  '<div id="bodyContent">'+
				  '<p><b>Description</b> :&nbsp;' + des+ '</p>'+
				  '<p><b>Serial </b> :&nbsp;' + serialNo + '</p>'+
				  '<p><b>Number</b> :&nbsp;' + number+ '</p>'+
				  '<p><b>Router IP</b> :&nbsp;' + routerIp+ '</p>'+
				  '<p><b>LanIP(WanIP)</b> :&nbsp;' + ipstr +'</p>'+
				  '<p><b>Rssi Level </b> :&nbsp;' + rssi+ '</p>'+
				  '<p><b>Firmware Version </b> :&nbsp; ' + firmVersion+ '</p>'+
				  '<p><b>NMS Version </b> :&nbsp; ' + nmsVersion+ '</p>';
				
     switch(router_status){
		case 0:
			contentString +=  '<p><b>Status </b> :&nbsp;' + "normal"+ '</p>';
			break;
		case 1:
			contentString +=  '<p><b>Status </b> :&nbsp;' + "Router Error"+ '</p>';
		break;
		case 2:
			contentString +=  '<p><b>Status </b> :&nbsp;' + "Alert"+ '</p>';
			contentString +=  '<p><b>Detail </b> :&nbsp;' + message + '</p>';
		break;
	 }
	 contentString +='</div>'+'</div>';

     var infowindow = new google.maps.InfoWindow({
		content: contentString
    });
	
    var myOptions = {
        position: {lat: latitude, lng: longitude},
        draggable: false,
        map: map,
		//label : "R",
		//icon: image,
		title : routerName,
        visible: true
    };
	if (router_status == 0){ // 정상
		var pinColor = "00CC00|336633";	
		myOptions.icon = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|" + pinColor,
			new google.maps.Size(25, 39),
			new google.maps.Point(0,0),
			new google.maps.Point(10, 34),
			new google.maps.Size(25, 39));
	}

	if (router_status == 1){ //장애 
	   // 장애 인 경우 기본 이미지로 사용하기 때문에 마커 객체를 별도 생성하지 않음
	   //장애인 경우 마커의 별도 처리가 필요하면 이곳에 기입
	}

	if (router_status == 2){ //얼럿
		var pinColor = "FFA500|336633";
		myOptions.icon = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|" + pinColor,
			new google.maps.Size(25, 39),
			new google.maps.Point(0,0),
			new google.maps.Point(10, 34),
			new google.maps.Size(25, 39));
	}

    var marker = new google.maps.Marker(myOptions);
	markers.push(marker);

	google.maps.event.addListener(marker, 'mouseover', function(){
		window.external.RouterMapOver();
		infowindow.open(map, marker);
	});

	google.maps.event.addListener(marker, 'mouseout', function(){
		 window.external.RouterMapOut();
		 infowindow.close();
	});

	google.maps.event.addListener(marker, 'click', function(){
		  window.external.CallMoveDevice(routerName,serialNo, lanIp);
	});

	google.maps.event.addListener(marker, 'rightclick', function(){
		  window.external.CallDeviceConfig(serialNo);
	});
}

function setMapOnAll(map) {
  for (var i = 0; i < markers.length; i++) {
    markers[i].setMap(map);
  }
}

// 마커 배열의 마커를 모두 숨김(마커배열은 유지)
function clearMarkers() {
  setMapOnAll(null);
}

// 마커 배열의 마커를 모두 표시
function showMarkers() {
  setMapOnAll(map);
}

// 마커배열을 삭제하고, 맵의 마커를 모두 숨김
function deleteMarkers() {
  clearMarkers();
  markers = [];
}

// 마크좌표 가져오기
function getMarkPos(marker){
    var pos=marker.getPosition();
    return {x:pos.lat(), y:pos.lng()};
}

// 특정좌표로 이동하기
function setMapByCoord(x, y){
    var loc = new google.maps.LatLng(x, y);
    map.setCenter(loc);
}

// 특정좌표로 애니메이션으로 이동하기
function setMapByCoordWithAnim(x, y){
    var loc = new google.maps.LatLng(x, y);
    map.panTo(loc);
	//map.setCenter(loc);
	
}

function setRouterStatusOnMap(totalRouterCnt, normalRouterCnt, abnormalRouterCnt, message){
	$("#total-cnt").html(totalRouterCnt);
	$("#normal-cnt").html(normalRouterCnt);
	$("#abnormal-cnt").html(abnormalRouterCnt);
	$("#status-message").html(message);
}

</script> 
</head> 
  <style>
    	#map_container
		{
			width : 100%;
			height : 100%;
		}

      #target {
        width: 345px;
      }

	  #router_info_panel{
			position: fixed;
			padding-top : 10px;
			padding-left : 10px;
			padding-right : 10px;
			padding-bottom : 10px;
			left : 20px;
			top : 20px ;
			width : 180px;
		
			background-color:   rgba( 0, 0, 0, 0.7 );
			
			color: #eeeeee;
			font:bold 8pt '맑은 고딕';
			border-radius:0.5em;
			-moz-border-radius: 0.5em;
			-webkit-border-radius: 0.5em;
			-webkit-box-shadow: 10px 10px 20px -8px rgba(38,36,38,1);
			-moz-box-shadow: 10px 10px 20px -8px rgba(38,36,38,1);
			box-shadow: 10px 10px 20px -8px rgba(38,36,38,1);
    	}

		#router_content
		{
			color : #DDDDDD;
			text-align : left;
		}

		#header 
		{
			font:normal 8pt '맑은 고딕';
			color : cyan;
		}

		.mytable {
		    margin-top : 10px;
			width : 100%;
			border-collapse: collapse;
		}  

		.mytable th, .mytable td {
			border: 1px solid #DDDDDD;
			text-align: center;
			padding  : 4px;
		}

		.t1 {
			background-color:   rgba(0, 0, 0, 0.5 );
			color : #FFFFFF;
			font:normal 9px '맑은 고딕';
		}

		.t2{
		background-color:   rgba( 50, 50, 50, 0.5 );
		font : normal 10px '굴림';
		color : #FFFFFF;
		}

		.alert_detail
		{
		    margin-top : 7px;
		    padding : 10px;
			background-color:   rgba( 0,0,0, 0.3 );
			font:normal 11px '굴림';
			border-radius:0.5em;
			-moz-border-radius: 0.5em;
			-webkit-border-radius: 0.5em;
			color : #EEEEEE;
			line-height :1.5em;
		}
    </style>
<body onload="initialize(0,0)"> 
	<div id ="map_container">
		<div id="map_canvas"></div>
    </div>
	<div id ="router_info_panel">
		<div>
			<span id = "header"> ROUTER PANEL</span>
			<span id ="folder-extender" style ="margin-left : 45%"> ▼</span>
		</div>
		<div id ="router_content" style = "margin-top: 6px">
			<div>
				<table class="mytable">
					<tr>
						<td class = "t1" style ="width : 70%;text-align: left;padding-left : 30px;">TOTAL</td>
						<td class = "t2" id = "total-cnt" ></td>
					</tr>
					<tr>
						<td class = "t1" style ="width : 70%;text-align: left;padding-left : 30px;" >NORMAL</td>
						<td class = "t2" id = "normal-cnt"></td>
					</tr>
						<tr>
						<td class = "t1" style ="width : 70%;text-align: left;padding-left : 30px;">ABNORMAL</td>
						<td class = "t2" id = "abnormal-cnt"></td>
					</tr>
				</table>
			</div>
			<div style ="padding-top: 5px" class = "alert_detail" id ="status-message">
			</div>
		</div>
	</div>
</body> 
</html>